/**
 * Recognition wall JavaScript.
 *
 * @module     local_recognition/main
 * @copyright  2024 Your Name <your@email.com>
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */ define(["jquery", "core/ajax", "core/notification"], function (e, t, o) {
  return {
    init: function () {
      function n(e, n, r) {
        t.call([
          {
            methodname: "local_recognition_handle_reaction",
            args: { action: "get_comments", recordid: e, type: "comment" },
            done: function (e) {
              e.success
                ? (n.find(".comments-list").html(e.data.html),
                  r.find(".comments-count").text(e.data.count))
                : (console.error("Comments error:", e.message),
                  o.addNotification({
                    message: e.message || "Error loading comments",
                    type: "error",
                  }));
            },
            fail: function (e) {
              console.error("AJAX error:", e),
                o.addNotification({
                  message: "Error connecting to server",
                  type: "error",
                });
            },
          },
        ]);
      }
      e(".file-input").on("change", function (t) {
        var n = t.target.files[0];
        if (n) {
          var r = e(this).data("max-size");
          if (n.size > r) {
            o.addNotification({
              message: "File size must be less than 5MB",
              type: "error",
            }),
              e(this).val("");
            return;
          }
          var i = new FileReader();
          (i.onload = function (t) {
            e(".post-attachments")
              .html(
                `
  <div class="attachment-preview">
  <img src="${t.target.result}" alt="Preview">
  <div class="attachment-remove">&times;</div>
</div>
`
              )
              .show();
          }),
            i.readAsDataURL(n);
        }
      }),
        e(document).on("click", ".attachment-remove", function () {
          e(".file-input").val(""), e(".post-attachments").empty().hide();
        }),
        e(document).on("click", ".recognition-like-btn", function (n) {
          n.preventDefault();
          var r = e(this),
            i = r.data("record-id");
          t.call([
            {
              methodname: "local_recognition_handle_reaction",
              args: { action: "like", recordid: i, type: "like" },
              done: function (e) {
                if (e.success) {
                  var t = e.data.likes,
                    n = e.data.isLiked;
                  r.find(".likes-count").text(t), r.toggleClass("liked", n);
                } else
                  console.error("Like error:", e.message),
                    o.addNotification({
                      message: e.message || "Error liking post",
                      type: "error",
                    });
              },
              fail: function (e) {
                console.error("AJAX error:", e),
                  o.addNotification({
                    message: "Error connecting to server",
                    type: "error",
                  });
              },
            },
          ]);
        }),
        e(document).on("click", ".recognition-thanks-btn", function (n) {
          n.preventDefault();
          var r = e(this),
            i = r.data("record-id");
          t.call([
            {
              methodname: "local_recognition_handle_reaction",
              args: { action: "thanks", recordid: i, type: "thanks" },
              done: function (e) {
                if (e.success) {
                  var t = e.data.thanks,
                    n = e.data.isThanked;
                  r.find(".thanks-count").text(t), r.toggleClass("thanked", n);
                } else
                  console.error("Thanks error:", e.message),
                    o.addNotification({
                      message: e.message || "Error thanking post",
                      type: "error",
                    });
              },
              fail: function (e) {
                console.error("AJAX error:", e),
                  o.addNotification({
                    message: "Error connecting to server",
                    type: "error",
                  });
              },
            },
          ]);
        }),
        e(document).on("click", ".recognition-celebration-btn", function (n) {
          n.preventDefault();
          var r = e(this),
            i = r.data("record-id");
          t.call([
            {
              methodname: "local_recognition_handle_reaction",
              args: { action: "celebration", recordid: i, type: "celebration" },
              done: function (e) {
                if (e.success) {
                  var t = e.data.celebration,
                    n = e.data.isCelebrated;
                  r.find(".celebration-count").text(t),
                    r.toggleClass("celebrated", n);
                } else
                  console.error("Celebration error:", e.message),
                    o.addNotification({
                      message: e.message || "Error celebrating post",
                      type: "error",
                    });
              },
              fail: function (e) {
                console.error("AJAX error:", e),
                  o.addNotification({
                    message: "Error connecting to server",
                    type: "error",
                  });
              },
            },
          ]);
        }),
        e(document).on("click", ".recognition-comments-btn", function (t) {
          t.preventDefault();
          var o = e(this),
            r = o.data("record-id"),
            i = e("#comments-" + r);
          i.slideToggle(),
            0 === i.find(".comments-list").length &&
              (i.prepend('<div class="comments-list"></div>'), n(r, i, o));
        }),
        e(document).on("submit", ".recognition-comment-form", function (r) {
          r.preventDefault();
          var i = e(this),
            a = i.data("record-id"),
            c = i.find('input[name="content"]'),
            s = c.val().trim(),
            d = i
              .closest(".recognition-post")
              .find(".recognition-comments-btn"),
            l = i.closest(".recognition-comments");
          s &&
            t.call([
              {
                methodname: "local_recognition_handle_reaction",
                args: {
                  action: "add_comment",
                  recordid: a,
                  type: "comment",
                  content: s,
                },
                done: function (e) {
                  e.success
                    ? (c.val(""), n(a, l, d))
                    : (console.error("Comment error:", e.message),
                      o.addNotification({
                        message: e.message || "Error adding comment",
                        type: "error",
                      }));
                },
                fail: function (e) {
                  console.error("AJAX error:", e),
                    o.addNotification({
                      message: "Error connecting to server",
                      type: "error",
                    });
                },
              },
            ]);
        }),
        e(document).on(
          "click",
          "#recognition-pagination .page-item:not(.active) .page-link",
          function (t) {
            t.preventDefault();
            var n = e(this).attr("href");
            if (n) {
              var r,
                i,
                a = n.match(/[?&]page=(\d+)/);
              (r = a ? a[1] : 0),
                e("#recognition-loading").show(),
                (i = window.location.href.split("?")[0]),
                window.history.pushState(
                  { page: r },
                  "",
                  i + (r > 0 ? "?page=" + r : "")
                ),
                e.ajax({
                  url: i,
                  data: { page: r, ajax: 1 },
                  method: "GET",
                  success: function (t) {
                    var o = e(t).find("#recognition-posts-container").html(),
                      n = e(t).find("#recognition-pagination").html();
                    e("#recognition-posts-container").html(o),
                      e("#recognition-pagination").html(n),
                      e("#recognition-loading").hide(),
                      e("html, body").animate(
                        {
                          scrollTop:
                            e("#recognition-posts-container").offset().top -
                            100,
                        },
                        500
                      );
                  },
                  error: function (t, n, r) {
                    console.error("AJAX error:", r),
                      o.addNotification({
                        message: "Error loading posts: " + r,
                        type: "error",
                      }),
                      e("#recognition-loading").hide();
                  },
                });
            }
          }
        );
    },
  };
});

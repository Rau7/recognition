/**
 * Recognition wall JavaScript.
 *
 * @module     local_recognition/main
 * @copyright  2024 Your Name <your@email.com>
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */ define(["jquery", "core/ajax", "core/notification"], function (e, t, r) {
  return {
    init: function () {
      function o(e, o, n) {
        t.call([
          {
            methodname: "local_recognition_handle_reaction",
            args: { action: "get_comments", recordid: e, type: "comment" },
            done: function (e) {
              e.success
                ? (o.find(".comments-list").html(e.data.html),
                  n.find(".comments-count").text(e.data.count))
                : (console.error("Comments error:", e.message),
                  r.addNotification({
                    message: e.message || "Error loading comments",
                    type: "error",
                  }));
            },
            fail: function (e) {
              console.error("AJAX error:", e),
                r.addNotification({
                  message: "Error connecting to server",
                  type: "error",
                });
            },
          },
        ]);
      }
      e(".file-input").on("change", function (t) {
        var o = t.target.files[0];
        if (o) {
          var n = e(this).data("max-size");
          if (o.size > n) {
            r.addNotification({
              message: "File size must be less than 5MB",
              type: "error",
            }),
              e(this).val("");
            return;
          }
          var i = new FileReader();
          (i.onload = function (t) {
            e(".post-attachments")
              .html(
                `
  <div class="attachment-preview">
  <img src="${t.target.result}" alt="Preview">
  <div class="attachment-remove">&times;</div>
</div>
`
              )
              .show();
          }),
            i.readAsDataURL(o);
        }
      }),
        e(document).on("click", ".attachment-remove", function () {
          e(".file-input").val(""), e(".post-attachments").empty().hide();
        }),
        e(".recognition-like-btn").on("click", function (o) {
          o.preventDefault();
          var n = e(this),
            i = n.data("record-id");
          t.call([
            {
              methodname: "local_recognition_handle_reaction",
              args: { action: "like", recordid: i, type: "like" },
              done: function (e) {
                if (e.success) {
                  var t = e.data.likes,
                    o = e.data.isLiked;
                  n.find(".likes-count").text(t), n.toggleClass("liked", o);
                } else
                  console.error("Like error:", e.message),
                    r.addNotification({
                      message: e.message || "Error liking post",
                      type: "error",
                    });
              },
              fail: function (e) {
                console.error("AJAX error:", e),
                  r.addNotification({
                    message: "Error connecting to server",
                    type: "error",
                  });
              },
            },
          ]);
        }),
        e(".recognition-thanks-btn").on("click", function (o) {
          o.preventDefault();
          var n = e(this),
            i = n.data("record-id");
          t.call([
            {
              methodname: "local_recognition_handle_reaction",
              args: { action: "thanks", recordid: i, type: "thanks" },
              done: function (e) {
                if (e.success) {
                  var t = e.data.thanks,
                    o = e.data.isThanked;
                  n.find(".thanks-count").text(t), n.toggleClass("thanked", o);
                } else
                  console.error("Thanks error:", e.message),
                    r.addNotification({
                      message: e.message || "Error adding thanks",
                      type: "error",
                    });
              },
              fail: function (e) {
                console.error("AJAX error:", e),
                  r.addNotification({
                    message: "Error connecting to server",
                    type: "error",
                  });
              },
            },
          ]);
        }),
        e(".recognition-celebration-btn").on("click", function (o) {
          o.preventDefault();
          var n = e(this),
            i = n.data("record-id");
          t.call([
            {
              methodname: "local_recognition_handle_reaction",
              args: { action: "celebration", recordid: i, type: "celebration" },
              done: function (e) {
                if (e.success) {
                  var t = e.data.celebration,
                    o = e.data.isCelebrated;
                  n.find(".celebration-count").text(t),
                    n.toggleClass("celebrated", o);
                } else
                  console.error("Celebration error:", e.message),
                    r.addNotification({
                      message: e.message || "Error adding celebration",
                      type: "error",
                    });
              },
              fail: function (e) {
                console.error("AJAX error:", e),
                  r.addNotification({
                    message: "Error connecting to server",
                    type: "error",
                  });
              },
            },
          ]);
        }),
        e(".recognition-comments-btn").on("click", function (t) {
          t.preventDefault();
          var r = e(this),
            n = r.data("record-id"),
            i = r.closest(".recognition-post").find(".recognition-comments");
          i.slideToggle(), i.is(":visible") && o(n, i, r);
        }),
        e(".recognition-comment-form").on("submit", function (n) {
          n.preventDefault();
          var i = e(this),
            a = i.data("record-id"),
            c = i.find('input[name="content"]'),
            s = c.val().trim(),
            d = i
              .closest(".recognition-post")
              .find(".recognition-comments-btn"),
            l = i.closest(".recognition-comments");
          s &&
            t.call([
              {
                methodname: "local_recognition_handle_reaction",
                args: {
                  action: "add_comment",
                  recordid: a,
                  type: "comment",
                  content: s,
                },
                done: function (e) {
                  e.success
                    ? (c.val(""), o(a, l, d))
                    : (console.error("Comment error:", e.message),
                      r.addNotification({
                        message: e.message || "Error adding comment",
                        type: "error",
                      }));
                },
                fail: function (e) {
                  console.error("AJAX error:", e),
                    r.addNotification({
                      message: "Error connecting to server",
                      type: "error",
                    });
                },
              },
            ]);
        });
    },
  };
});

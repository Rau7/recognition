/**
 * Recognition wall JavaScript.
 *
 * @module     local_recognition/main
 * @copyright  2024 Your Name <your@email.com>
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */ define(["jquery", "core/notification"], function (e, t) {
  return {
    init: function () {
      function o(o, n, r) {
        e.ajax({
          url: M.cfg.wwwroot + "/local/recognition/ajax.php",
          type: "POST",
          data: {
            action: "get_comments",
            postid: o,
            content: "",
            commentid: 0,
            sesskey: M.cfg.sesskey,
          },
          dataType: "json",
          success: function (e) {
            console.log("Comments response:", e),
              e.success
                ? (n.find(".comments-list").html(e.data.html),
                  r.find(".comments-count").text(e.data.count))
                : (console.error("Comments error:", e.message),
                  t.addNotification({
                    message: e.message || "Error loading comments",
                    type: "error",
                  }));
          },
          error: function (e, o, n) {
            console.error("AJAX error:", e.responseText, o, n),
              t.addNotification({
                message: "Error connecting to server: " + n,
                type: "error",
              });
          },
        });
      }
      e(document).on("input", ".mention-textarea", function () {
        console.log("hey");
        let t = e(this),
          o = t.prop("selectionStart"),
          n = t.val(),
          r = n.lastIndexOf("@", o - 1);
        if (
          (console.log("[mention] textarea value:", n),
          console.log("[mention] cursorPos:", o, "lastAt:", r),
          r >= 0 && (0 === r || /\s/.test(n.charAt(r - 1))))
        ) {
          let i = n.substring(r + 1, o);
          console.log("[mention] @ bulundu, query:", i),
            i.length >= 1
              ? (console.log("[mention] AJAX tetikleniyor, query:", i),
                e.ajax({
                  url: M.cfg.wwwroot + "/local/recognition/ajax.php",
                  method: "GET",
                  data: {
                    action: "searchusers",
                    query: i,
                    sesskey: M.cfg.sesskey,
                  },
                  dataType: "json",
                  success: function (o) {
                    if (
                      (console.log("[mention] AJAX success, response:", o),
                      o.success)
                    ) {
                      let n = e("#mention-dropdown");
                      0 === n.length &&
                        (n = e(
                          '<ul id="mention-dropdown" class="mention-dropdown"></ul>'
                        ).appendTo("body")),
                        n.empty(),
                        (o.data || []).forEach(function (t) {
                          let o = e('<li class="mention-item"></li>')
                            .text(t.fullname)
                            .attr("data-uid", t.id);
                          n.append(o);
                        });
                      let r = t.offset();
                      n.css({
                        top: r.top + t.outerHeight(),
                        left: r.left,
                        width: t.outerWidth(),
                        position: "absolute",
                        zIndex: 9999,
                        display: "block",
                      }),
                        console.log(
                          "[mention] Dropdown g\xf6sterildi, user count:",
                          o.users.length
                        );
                    } else
                      console.log(
                        "[mention] AJAX success fakat success=false, dropdown gizlendi"
                      ),
                        e("#mention-dropdown").hide();
                  },
                  error: function (t, o, n) {
                    console.log("[mention] AJAX error", t, o, n),
                      e("#mention-dropdown").hide();
                  },
                }))
              : (console.log("[mention] Query boş, dropdown gizlendi"),
                e("#mention-dropdown").hide());
        } else console.log("[mention] @ uygun yerde değil, dropdown gizlendi"), e("#mention-dropdown").hide();
      }),
        e(document).on("mousedown", ".mention-item", function (t) {
          t.preventDefault();
          let o = e(this),
            n = e(".mention-textarea:focus");
          if (0 === n.length) return;
          let r = n.prop("selectionStart"),
            i = n.val(),
            a = i.lastIndexOf("@", r - 1),
            s = i.substring(0, a),
            c = i.substring(r),
            d = "@" + o.text() + " ";
          n.val(s + d + c),
            n.focus(),
            n[0].setSelectionRange((s + d).length, (s + d).length),
            e("#mention-dropdown").hide();
        }),
        e(document).on("blur", ".mention-textarea", function () {
          setTimeout(function () {
            e("#mention-dropdown").hide();
          }, 200);
        }),
        e(".file-input").on("change", function (o) {
          var n = o.target.files[0];
          if (n) {
            var r = e(this).data("max-size");
            if (n.size > r) {
              t.addNotification({
                message: "File size must be less than 5MB",
                type: "error",
              }),
                e(this).val("");
              return;
            }
            var i = new FileReader();
            (i.onload = function (t) {
              e(".post-attachments")
                .html(
                  `
  <div class="attachment-preview">
    <img src="${t.target.result}" alt="Preview">
    <div class="attachment-remove">&times;</div>
  </div>
`
                )
                .show();
            }),
              i.readAsDataURL(n);
          }
        }),
        e(document).on("click", ".attachment-remove", function () {
          e(".file-input").val(""), e(".post-attachments").empty().hide();
        }),
        e(document).on("click", ".recognition-like-btn", function (o) {
          o.preventDefault();
          var n = e(this),
            r = n.data("record-id");
          console.log("Like button clicked for record ID:", r),
            e.ajax({
              url: M.cfg.wwwroot + "/local/recognition/ajax.php",
              type: "POST",
              data: {
                action: "like",
                postid: r,
                content: "",
                commentid: 0,
                sesskey: M.cfg.sesskey,
              },
              dataType: "json",
              success: function (e) {
                if ((console.log("Like response:", e), e.success)) {
                  var o = e.data.likes,
                    r = e.data.isLiked;
                  n.find(".likes-count").text(o), n.toggleClass("liked", r);
                } else
                  console.error("Like error:", e.message),
                    t.addNotification({
                      message: e.message || "Error liking post",
                      type: "error",
                    });
              },
              error: function (e, o, n) {
                console.error("AJAX error:", e.responseText, o, n),
                  t.addNotification({
                    message: "Error connecting to server: " + n,
                    type: "error",
                  });
              },
            });
        }),
        e(document).on("click", ".recognition-thanks-btn", function (o) {
          o.preventDefault();
          var n = e(this),
            r = n.data("record-id");
          console.log("Thanks button clicked for record ID:", r),
            e.ajax({
              url: M.cfg.wwwroot + "/local/recognition/ajax.php",
              type: "POST",
              data: {
                action: "thanks",
                postid: r,
                content: "",
                commentid: 0,
                sesskey: M.cfg.sesskey,
              },
              dataType: "json",
              success: function (e) {
                if ((console.log("Thanks response:", e), e.success)) {
                  var o = e.data.thanks,
                    r = e.data.isThanked;
                  n.find(".thanks-count").text(o), n.toggleClass("thanked", r);
                } else
                  console.error("Thanks error:", e.message),
                    t.addNotification({
                      message: e.message || "Error thanking post",
                      type: "error",
                    });
              },
              error: function (e, o, n) {
                console.error("AJAX error:", e.responseText, o, n),
                  t.addNotification({
                    message: "Error connecting to server: " + n,
                    type: "error",
                  });
              },
            });
        }),
        e(document).on("click", ".recognition-celebration-btn", function (o) {
          o.preventDefault();
          var n = e(this),
            r = n.data("record-id");
          console.log("Celebration button clicked for record ID:", r),
            e.ajax({
              url: M.cfg.wwwroot + "/local/recognition/ajax.php",
              type: "POST",
              data: {
                action: "celebration",
                postid: r,
                content: "",
                commentid: 0,
                sesskey: M.cfg.sesskey,
              },
              dataType: "json",
              success: function (e) {
                if ((console.log("Celebration response:", e), e.success)) {
                  var o = e.data.celebration,
                    r = e.data.isCelebrated;
                  n.find(".celebration-count").text(o),
                    n.toggleClass("celebrated", r);
                } else
                  console.error("Celebration error:", e.message),
                    t.addNotification({
                      message: e.message || "Error celebrating post",
                      type: "error",
                    });
              },
              error: function (e, o, n) {
                console.error("AJAX error:", e.responseText, o, n),
                  t.addNotification({
                    message: "Error connecting to server: " + n,
                    type: "error",
                  });
              },
            });
        }),
        e(document).on("click", ".recognition-comments-btn", function (t) {
          t.preventDefault();
          var n = e(this),
            r = n.data("record-id"),
            i = e("#comments-" + r);
          i.slideToggle(),
            0 === i.find(".comments-list").length &&
              (i.prepend('<div class="comments-list"></div>'), o(r, i, n));
        }),
        e(document).on("submit", ".recognition-comment-form", function (n) {
          n.preventDefault();
          var r = e(this),
            i = r.data("record-id"),
            a = r.find('input[name="content"]'),
            s = a.val().trim(),
            c = r
              .closest(".recognition-post")
              .find(".recognition-comments-btn"),
            d = r.closest(".recognition-comments");
          s &&
            e.ajax({
              url: M.cfg.wwwroot + "/local/recognition/ajax.php",
              type: "POST",
              data: {
                action: "add_comment",
                postid: i,
                content: s,
                commentid: 0,
                sesskey: M.cfg.sesskey,
              },
              dataType: "json",
              success: function (e) {
                console.log("Comment response:", e),
                  e.success
                    ? (a.val(""), o(i, d, c))
                    : (console.error("Comment error:", e.message),
                      t.addNotification({
                        message: e.message || "Error adding comment",
                        type: "error",
                      }));
              },
              error: function (e, o, n) {
                console.error("AJAX error:", e.responseText, o, n),
                  t.addNotification({
                    message: "Error connecting to server: " + n,
                    type: "error",
                  });
              },
            });
        }),
        e(document).on(
          "click",
          "#recognition-pagination .page-item:not(.active) .page-link",
          function (o) {
            o.preventDefault();
            var n = e(this).attr("href");
            if (n) {
              var r,
                i,
                a = n.match(/[?&]page=(\d+)/);
              (r = a ? parseInt(a[1]) : 0),
                e(".loading-indicator").show(),
                (i = window.location.href.split("?")[0]),
                window.history.pushState(
                  { page: r },
                  "",
                  i + (r > 0 ? "?page=" + r : "")
                ),
                e.ajax({
                  url: i,
                  data: { page: r, ajax: 1 },
                  method: "GET",
                  success: function (t) {
                    var o = e(t).find(".recognition-posts-container").html();
                    e(".recognition-posts-container").html(o),
                      e("#recognition-pagination .page-item").removeClass(
                        "active"
                      );
                    var n = parseInt(
                      e("#recognition-pagination").data("total-pages") || 0
                    );
                    if (n > 0) {
                      var i = window.location.href.split("?")[0];
                      e(
                        "#recognition-pagination .page-item.last .page-link"
                      ).attr("href", i + "?page=" + (n - 1));
                    }
                    e("#recognition-pagination .page-item .page-link").each(
                      function () {
                        var t = e(this).attr("href");
                        if (t) {
                          var o = t.match(/[?&]page=(\d+)/);
                          (o ? parseInt(o[1]) : 0) === r &&
                            e(this).parent(".page-item").addClass("active");
                        } else
                          0 === r &&
                            "1" === e(this).text().trim() &&
                            e(this).parent(".page-item").addClass("active");
                      }
                    ),
                      e(".loading-indicator").hide(),
                      e("html, body").animate(
                        {
                          scrollTop:
                            e(".recognition-posts-container").offset().top -
                            100,
                        },
                        500
                      );
                  },
                  error: function (o, n, r) {
                    console.error("AJAX error:", o.responseText, n, r),
                      t.addNotification({
                        message: "Error loading posts: " + r,
                        type: "error",
                      }),
                      e(".loading-indicator").hide();
                  },
                });
            }
          }
        );
    },
  };
});

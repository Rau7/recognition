/**
 * Recognition wall JavaScript.
 *
 * @module     local_recognition/main
 * @copyright  2024 Your Name <your@email.com>
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */ define(["jquery", "core/notification"], function (e, t) {
  return {
    init: function () {
      function o(o, r, n) {
        e.ajax({
          url: M.cfg.wwwroot + "/local/recognition/ajax.php",
          type: "POST",
          data: {
            action: "get_comments",
            postid: o,
            content: "",
            commentid: 0,
            sesskey: M.cfg.sesskey,
          },
          dataType: "json",
          success: function (e) {
            console.log("Comments response:", e),
              e.success
                ? (r.find(".comments-list").html(e.data.html),
                  n.find(".comments-count").text(e.data.count))
                : (console.error("Comments error:", e.message),
                  t.addNotification({
                    message: e.message || "Error loading comments",
                    type: "error",
                  }));
          },
          error: function (e, o, r) {
            console.error("AJAX error:", e.responseText, o, r),
              t.addNotification({
                message: "Error connecting to server: " + r,
                type: "error",
              });
          },
        });
      }
      e(".file-input").on("change", function (o) {
        var r = o.target.files[0];
        if (r) {
          var n = e(this).data("max-size");
          if (r.size > n) {
            t.addNotification({
              message: "File size must be less than 5MB",
              type: "error",
            }),
              e(this).val("");
            return;
          }
          var a = new FileReader();
          (a.onload = function (t) {
            e(".post-attachments")
              .html(
                `
  <div class="attachment-preview">
  <img src="${t.target.result}" alt="Preview">
  <div class="attachment-remove">&times;</div>
</div>
`
              )
              .show();
          }),
            a.readAsDataURL(r);
        }
      }),
        e(document).on("click", ".attachment-remove", function () {
          e(".file-input").val(""), e(".post-attachments").empty().hide();
        }),
        e(document).on("click", ".recognition-like-btn", function (o) {
          o.preventDefault();
          var r = e(this),
            n = r.data("record-id");
          console.log("Like button clicked for record ID:", n),
            e.ajax({
              url: M.cfg.wwwroot + "/local/recognition/ajax.php",
              type: "POST",
              data: {
                action: "like",
                postid: n,
                content: "",
                commentid: 0,
                sesskey: M.cfg.sesskey,
              },
              dataType: "json",
              success: function (e) {
                if ((console.log("Like response:", e), e.success)) {
                  var o = e.data.likes,
                    n = e.data.isLiked;
                  r.find(".likes-count").text(o), r.toggleClass("liked", n);
                } else
                  console.error("Like error:", e.message),
                    t.addNotification({
                      message: e.message || "Error liking post",
                      type: "error",
                    });
              },
              error: function (e, o, r) {
                console.error("AJAX error:", e.responseText, o, r),
                  t.addNotification({
                    message: "Error connecting to server: " + r,
                    type: "error",
                  });
              },
            });
        }),
        e(document).on("click", ".recognition-thanks-btn", function (o) {
          o.preventDefault();
          var r = e(this),
            n = r.data("record-id");
          console.log("Thanks button clicked for record ID:", n),
            e.ajax({
              url: M.cfg.wwwroot + "/local/recognition/ajax.php",
              type: "POST",
              data: {
                action: "thanks",
                postid: n,
                content: "",
                commentid: 0,
                sesskey: M.cfg.sesskey,
              },
              dataType: "json",
              success: function (e) {
                if ((console.log("Thanks response:", e), e.success)) {
                  var o = e.data.thanks,
                    n = e.data.isThanked;
                  r.find(".thanks-count").text(o), r.toggleClass("thanked", n);
                } else
                  console.error("Thanks error:", e.message),
                    t.addNotification({
                      message: e.message || "Error thanking post",
                      type: "error",
                    });
              },
              error: function (e, o, r) {
                console.error("AJAX error:", e.responseText, o, r),
                  t.addNotification({
                    message: "Error connecting to server: " + r,
                    type: "error",
                  });
              },
            });
        }),
        e(document).on("click", ".recognition-celebration-btn", function (o) {
          o.preventDefault();
          var r = e(this),
            n = r.data("record-id");
          console.log("Celebration button clicked for record ID:", n),
            e.ajax({
              url: M.cfg.wwwroot + "/local/recognition/ajax.php",
              type: "POST",
              data: {
                action: "celebration",
                postid: n,
                content: "",
                commentid: 0,
                sesskey: M.cfg.sesskey,
              },
              dataType: "json",
              success: function (e) {
                if ((console.log("Celebration response:", e), e.success)) {
                  var o = e.data.celebration,
                    n = e.data.isCelebrated;
                  r.find(".celebration-count").text(o),
                    r.toggleClass("celebrated", n);
                } else
                  console.error("Celebration error:", e.message),
                    t.addNotification({
                      message: e.message || "Error celebrating post",
                      type: "error",
                    });
              },
              error: function (e, o, r) {
                console.error("AJAX error:", e.responseText, o, r),
                  t.addNotification({
                    message: "Error connecting to server: " + r,
                    type: "error",
                  });
              },
            });
        }),
        e(document).on("click", ".recognition-comments-btn", function (t) {
          t.preventDefault();
          var r = e(this),
            n = r.data("record-id"),
            a = e("#comments-" + n);
          a.slideToggle(),
            0 === a.find(".comments-list").length &&
              (a.prepend('<div class="comments-list"></div>'), o(n, a, r));
        }),
        e(document).on("submit", ".recognition-comment-form", function (r) {
          r.preventDefault();
          var n = e(this),
            a = n.data("record-id"),
            i = n.find('input[name="content"]'),
            s = i.val().trim(),
            c = n
              .closest(".recognition-post")
              .find(".recognition-comments-btn"),
            d = n.closest(".recognition-comments");
          s &&
            e.ajax({
              url: M.cfg.wwwroot + "/local/recognition/ajax.php",
              type: "POST",
              data: {
                action: "add_comment",
                postid: a,
                content: s,
                commentid: 0,
                sesskey: M.cfg.sesskey,
              },
              dataType: "json",
              success: function (e) {
                console.log("Comment response:", e),
                  e.success
                    ? (i.val(""), o(a, d, c))
                    : (console.error("Comment error:", e.message),
                      t.addNotification({
                        message: e.message || "Error adding comment",
                        type: "error",
                      }));
              },
              error: function (e, o, r) {
                console.error("AJAX error:", e.responseText, o, r),
                  t.addNotification({
                    message: "Error connecting to server: " + r,
                    type: "error",
                  });
              },
            });
        }),
        e(document).on(
          "click",
          "#recognition-pagination .page-item:not(.active) .page-link",
          function (o) {
            o.preventDefault();
            var r = e(this).attr("href");
            if (r) {
              var n,
                a,
                i = r.match(/[?&]page=(\d+)/);
              (n = i ? i[1] : 0),
                e(".loading-indicator").show(),
                (a = window.location.href.split("?")[0]),
                window.history.pushState(
                  { page: n },
                  "",
                  a + (n > 0 ? "?page=" + n : "")
                ),
                e.ajax({
                  url: a,
                  data: { page: n, ajax: 1 },
                  method: "GET",
                  success: function (t) {
                    var o = e(t).find(".recognition-posts-container").html();
                    e(".recognition-posts-container").html(o),
                      e("#recognition-pagination .page-item").removeClass(
                        "active"
                      ),
                      e("#recognition-pagination .page-item .page-link").each(
                        function () {
                          var t = e(this).attr("href");
                          if (t) {
                            var o = t.match(/[?&]page=(\d+)/);
                            (o ? o[1] : 0) == n &&
                              e(this).parent(".page-item").addClass("active");
                          }
                        }
                      ),
                      e(".loading-indicator").hide(),
                      e("html, body").animate(
                        {
                          scrollTop:
                            e(".recognition-posts-container").offset().top -
                            100,
                        },
                        500
                      );
                  },
                  error: function (o, r, n) {
                    console.error("AJAX error:", o.responseText, r, n),
                      t.addNotification({
                        message: "Error loading posts: " + n,
                        type: "error",
                      }),
                      e(".loading-indicator").hide();
                  },
                });
            }
          }
        );
    },
  };
});
